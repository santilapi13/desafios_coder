paths:
  /api/carts/:
    post:
      summary: Añade un nuevo carrito a la base de datos.
      tags:
        - Carts
      responses:
        "200":
          description: El carrito fue añadido satisfactoriamente a la base de datos.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Error del usuario. El carrito no pudo añadirse debido a que los parámetros pasados por el usuario son inválidos. Los productos especificados deben tener un id y una cantidad. El id debe ser de tipo ObjectId y debe pertenecer a un producto existente.
        "500":
          description: Error interno del servidor. Puede ser por query defectuosa o fallo de conexión con la base de datos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/createCart'
  /api/carts/:cid:
    get:
      summary: Obtiene un carrito a partir de su id.
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito que se desea obtener.
          schema:
            $type: String
      responses:
        "200":
          description: Carrito encontrado satisfactoriamente.
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Carts'
        "400":
          description: Error del usuario. El carrito no pudo obtenerse debido a que los parámetros pasados por el usuario son inválidos. El id debe cumplir el formato de ObjectId y debe pertenecer a un carrito existente.
        "500":
          description: Error interno del servidor. Puede ser por query defectuosa o fallo de conexión con la base de datos.
  /api/carts/:cid/products/:pid:
    post:
      summary: Añade una unidad de un producto a un carrito existente.
      tags:
        - Carts
        - Products
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito al cual agregarle el producto.
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: id del producto a agregar.
          schema:
            $type: String
      responses:
        "200":
          description: El producto fue añadido satisfactoriamente al carrito.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Error del usuario. El producto no pudo añadirse debido a que los parámetros pasados por el usuario son inválidos. Los cid y pid deben cumplir el formato de ObjectId. El cid debe pertenecer a un carrito existente y el pid debe pertenecer a un producto existente. Los usuarios cuyo rol sea "premium" no pueden agregar productos de su propiedad.
        "500":
          description: Error interno del servidor. Puede ser por query defectuosa o fallo de conexión con la base de datos.
    put:
      summary: Actualiza la cantidad y subtotal de determinado producto en un carrito, además del total de compra del carrito. 
      tags:
        - Carts
        - Products
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito a actualizar.
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: id del producto cuya cantidad será modificada.
          schema:
            $type: String
      responses:
        "200":
          description: La cantidad de producto fue actualizada satisfactoriamente.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Error del usuario. El carrito no pudo actualizarse debido a que los parámetros pasados por el usuario son inválidos. Los cid y pid deben cumplir el formato de ObjectId. El cid debe pertenecer a un carrito existente y el pid debe pertenecer a un producto existente. Debe especificarse la nueva cantidad del producto. La cantidad debe ser un entero positivo.
        "500":
          description: Error interno del servidor. Puede ser por query defectuosa o fallo de conexión con la base de datos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateAmountOfProductInCart'
    delete:
      summary: Elimina un producto de un carrito.
      tags:
        - Carts
        - Products
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito a actualizar.
          schema:
            $type: String
        - name: pid
          in: path
          required: true
          description: id del producto a eliminar.
          schema:
            $type: String
      responses:
        "200":
          description: El producto fue eliminado del carrito satisfactoriamente.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Cart'
        "400":
          description: Error del usuario. El carrito no pudo actualizarse debido a que los parámetros pasados por el usuario son inválidos. Los cid y pid deben cumplir el formato de ObjectId. El cid debe pertenecer a un carrito existente y el pid debe pertenecer a un producto existente. 
        "500":
          description: Error interno del servidor. Puede ser por query defectuosa o fallo de conexión con la base de datos.
  /api/carts/:cid/purchase:
    post:
      summary: Efectúa la compra del producto, actualizando el stock del producto en la base de datos y crea su correspondiente ticket.
      tags:
        - Carts
        - Products
        - Tickets
      parameters:
        - name: cid
          in: path
          required: true
          description: id del carrito a actualizar.
          schema:
            $type: String
      responses:
        "200":
          description: El carrito fue comprado satisfactoriamente.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#components/schemas/Ticket'
        "400":
          description: Error del usuario. El carrito no pudo comprarse debido por alguno de los siguientes motivos. El cid debe cumplir el formato de ObjectId y pertenecer a un carrito existente, el carrito no debe estar vacío o bien al menos un producto del carrito debe tener stock. 
        "500":
          description: Error interno del servidor. Puede ser por query defectuosa o fallo de conexión con la base de datos.
components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: id autogenerado por mongoDB.
        products:
          type: array
          description: Lista de productos del carrito.
          items:
            type: object
            properties:
              product:
                type: ObjectId
                description: Referencia al id del producto correspondiente.
              quantity:
                type: integer
                description: Cantidad del correspondiente producto en el carrito actual.
              subtotal:
                type: number
                description: Producto entre el precio de cada producto con la cantidad del producto en el carrito actual.
      example:
        _id: ObjectId('6913824hi3hre9182ye')
        products:
          - product: ObjectId('6413824hi3hre9272ye')
            quantity: 12
            subtotal: 1200
          - product: ObjectId('6413824hi3hdw9272aw')
            quantity: 5
            subtotal: 2500
    Ticket:
      type: object
      properties:
        _id:
          type: ObjectId
          description: id autogenerado por mongoDB.
        code:
          type: String
          description: Codigo identificador.
        purchase_datetime:
          type: date
          description: Fecha de la compra.
        amount:
          type: number
          description: Monto de compra a pagar.
        purchaser:
          type: String
          description: Email del comprador.
      example:
        _id: ObjectId('6913824hi3hre9182ye')
        code: 12345
        purchase_datetime: 05-10-23 20:00:00
        amount: 4362.5
        purchaser: juan@mail.com
requestBodies:
  createCart:
    type: object
    properties:
      products: 
        type: array
        description: Lista de productos inicial del carrito
        items:
          product:
            type: ObjectId
            description: Referencia al id del producto correspondiente.
          quantity:
            type: integer
            description: Cantidad del correspondiente producto en el carrito actual.
    example:
    - product: ObjectId('6413824hi3hre9272ye')
      quantity: 12
    - product: ObjectId('6413824hi3hdw9272aw')
      quantity: 5
  updateAmountOfProductInCart:
    type: object
    properties:
      quantity:
        type: integer
        description: Nueva cantidad del producto en el carrito.
    example:
      quantity: 5